// <auto-generated />
using System;
using CustomerVehicleManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomerVehicleManagement.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AllowEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowMail")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSms")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<bool>("OverrideCustomerTaxProfile")
                        .HasColumnType("bit");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PriceProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("RewardsMember")
                        .HasColumnType("bit");

                    b.Property<int>("TaxIds")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidThru")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.DriversLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriversLicence");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Hired")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DriversLicenceId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriversLicenceId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Customer", b =>
                {
                    b.HasOne("CustomerVehicleManagement.Core.Model.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("CustomerVehicleManagement.Core.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Organization");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.DriversLicence", b =>
                {
                    b.OwnsOne("CustomerVehicleManagement.Core.Model.DateTimeRange", "ValidFromThru", b1 =>
                        {
                            b1.Property<int>("DriversLicenceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<DateTime>("From")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Thru")
                                .HasColumnType("datetime2");

                            b1.HasKey("DriversLicenceId");

                            b1.ToTable("DriversLicence");

                            b1.WithOwner()
                                .HasForeignKey("DriversLicenceId");
                        });

                    b.Navigation("ValidFromThru")
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Employee", b =>
                {
                    b.HasOne("CustomerVehicleManagement.Core.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Organization", b =>
                {
                    b.HasOne("CustomerVehicleManagement.Core.Model.Person", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Person", b =>
                {
                    b.HasOne("CustomerVehicleManagement.Core.Model.DriversLicence", "DriversLicence")
                        .WithMany()
                        .HasForeignKey("DriversLicenceId");

                    b.Navigation("DriversLicence");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Vehicle", b =>
                {
                    b.HasOne("CustomerVehicleManagement.Core.Model.Customer", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("CustomerVehicleManagement.Core.Model.Customer", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
