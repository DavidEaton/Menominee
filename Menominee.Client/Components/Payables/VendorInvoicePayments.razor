@if (Payments == null)
{
    <p><em>Loading...</em></p>
}

@if (Payments != null && PaymentMethods != null)
{
    <TelerikGrid Data="Payments"
             OnRowClick="@OnRowSelected"
             OnRowDoubleClick="@OnEdit"
             Sortable="false"
             FilterMode="GridFilterMode.None"
             ShowColumnMenu="false"
             SelectionMode="GridSelectionMode.Single"
             SelectedItemsChanged="@((IEnumerable<VendorInvoicePaymentToWrite> payList) => OnPaymentSelect(payList))"
             SelectedItems="@SelectedPayments"
             @ref="@Grid">
        <GridColumns>
            <GridColumn Field="@nameof(VendorInvoicePaymentToWrite.PaymentMethod)"
                    Title="Payment Method"
                    Width="55%">
                <Template>
                    @{
                        var payment = context as VendorInvoicePaymentToWrite;
                        //<SfDropDownList TValue="long"
                        //        TItem="VendorInvoicePaymentMethodToReadInList"
                        //        PopupHeight="230px"
                        //        DataSource="@PaymentMethods"
                        //            @bind-Value="@payment.PaymentMethod.Id">
                        //    <DropDownListFieldSettings Text="Name" Value="Id" />
                        //    <DropDownListEvents TItem="VendorInvoicePaymentMethodToReadInList"
                        //                TValue="long"
                        //                ValueChange="@OnPaymentMethodChangeAsync">
                        //    </DropDownListEvents>
                        //</SfDropDownList>
                        <TelerikDropDownList @bind-Value="payment.PaymentMethod"
                                     Data="PaymentMethods"
                                     TextField="Name"
                                     ValueField="Id">
                        </TelerikDropDownList>
                    }
                </Template>
                <EditorTemplate>
                    @{
                        var payment = context as VendorInvoicePaymentToWrite;
                        <TelerikDropDownList @bind-Value="payment.PaymentMethod"
                                     Data="PaymentMethods"
                                     OnChange="OnPaymentMethodChangeAsync"
                                     TextField="Name"
                                     ValueField="Id">
                        </TelerikDropDownList>
                        //<SfDropDownList TValue="long"
                        //        TItem="VendorInvoicePaymentMethodToReadInList"
                        //        PopupHeight="230px"
                        //        DataSource="@PaymentMethods"
                        //            @bind-Value="@payment.PaymentMethod.Id">
                        //    <DropDownListFieldSettings Text="Name" Value="Id" />
                        //    <DropDownListEvents TItem="VendorInvoicePaymentMethodToReadInList"
                        //                TValue="long"
                        //                ValueChange="@OnPaymentMethodChangeAsync">
                        //    </DropDownListEvents>
                        //</SfDropDownList>
                    }
                </EditorTemplate>
            </GridColumn>

            <GridColumn Width="35%"
                    Field="@nameof(VendorInvoicePaymentToWrite.Amount)"
                    Title="Amount"
                    DisplayFormat="{0:C}"
                    ShowColumnChooser="false"
                    Lockable="false"
                    ShowColumnMenu="false"
                    Sortable="false"
                    Filterable="false"
                    TextAlign="ColumnTextAlign.Right">
                <Template>
                    @{
                        var item = context as VendorInvoicePaymentToWrite;
                        <TelerikNumericTextBox @bind-Value="item.Amount"
                                       Format="C"
                                       Decimals="2"
                                       Arrows="false">
                        </TelerikNumericTextBox>
                    }
                </Template>
                <EditorTemplate>
                    @{
                        var item = context as VendorInvoicePaymentToWrite;
                        <TelerikNumericTextBox @bind-Value="item.Amount"
                                       Format="C"
                                       Decimals="2"
                                       Arrows="false">
                        </TelerikNumericTextBox>
                    }
                </EditorTemplate>
            </GridColumn>
            <GridCommandColumn Width="117px"
                           Context="VendorInvoicePaymentToWrite">
                <GridCommandButton Command="_Balance"
                               IconClass="fas fa-arrow-left"
                               Size="sm"
                               Class="m-inline-button"
                               OnClick="@OnInsertBalanceClick">
                    Balance
                </GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>

    @*<EditNewDeleteIconButtons OnEdit="@OnEdit" OnNew="@OnNew" OnDelete="@OnDelete" ShowDivider="false" />*@
    <EditNewDeleteIconButtons OnNew="@OnNew" OnDelete="@OnDelete" ShowDivider="false" />
}
@*<div class="form">
        <h5 class="m-bordered-form-header">Payments</h5>
        <div class="m-bordered-form">
            <div>
                <div>
                    <SfGrid DataSource="@Payments"
                            AllowPaging="false"
                            AllowSorting="false"
                            AllowFiltering="false"
                            AllowTextWrap="true"
                            AllowResizing="true"
                            AllowReordering="false"
                            Width="100%"
                            ID="Grid"
                            @ref="Grid"
                            GridLines="GridLine.None"
                            Height="60px"
                            RowHeight="20">
                        <GridTemplates>
                            <EmptyRecordTemplate>
                            </EmptyRecordTemplate>
                        </GridTemplates>
                        <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="200"></GridFilterSettings>

                        <GridColumns>
                            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(VendorInvoicePaymentToWrite.PaymentMethodName)
                                                                HeaderText="Payment Method"
                                                                Width="60%">
                            </Syncfusion.Blazor.Grids.GridColumn>
                            <Syncfusion.Blazor.Grids.GridColumn Field=@nameof(VendorInvoicePaymentToWrite.Amount)
                                                                Width="40%"
                                                                HeaderText="Amount"
                                                                TextAlign="TextAlign.Right">
                            </Syncfusion.Blazor.Grids.GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
                <EditNewDeleteIconButtons OnEdit="@OnEdit" OnNew="@OnNew" OnDelete="@OnDelete" ShowDivider="false" />
            </div>
        </div>
    </div>*@

@*<style>
        .mm-margin-top {
            margin-top: .5em;
        }
    </style>*@