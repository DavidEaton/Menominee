@page "/"

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider TokenProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
<div>
    <p>Index page of <strong>Menominee</strong></p>
</div>

<p>@Details</p>

<AuthorizeView>
    <Authorized>
        <div class="top-row pl-4 navbar navbar-dark">
            <button class="" @onclick="WriteToken">
                <span>Write Token</span>
            </button>
        </div>
        <div>
            @context.User.Identity.Name

            @foreach (var claim in @context.User.Claims)
            {
                <div>
                    @claim.Type;
                    @claim.Value;
                </div>
            }
        </div>

    </Authorized>
</AuthorizeView>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private System.Security.Claims.ClaimsPrincipal principal;
    private bool admin = false;
    private string Details { get; set; }

    private async Task WriteToken()
    {
        string accessToken;

        var tokenResult = await TokenProvider.RequestAccessToken();
        if (tokenResult.TryGetToken(out var token))
        {
            accessToken = token.Value;
            Console.WriteLine(accessToken);

            foreach (var item in token.GrantedScopes)
            {
                Console.WriteLine(item.ToString());
            }

        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;


        if (user.Identity.IsAuthenticated)
        {
            Details = $"Your user.Identity.Name is {user.Identity.Name}.";
        }
        else
        {
            Details = "You are NOT logged in. Please log in.";
        }
    }
}
