@page "/register"
@inject IUserDataService UserDataService
@inject NavigationManager NavigationManager

<h1>Register</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="RegisterUser" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterUser.Email" />
                <ValidationMessage For="@(() => RegisterUser.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterUser.Password" />
                <ValidationMessage For="@(() => RegisterUser.Password)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterUser.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterUser.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private RegisterUser RegisterUser = new RegisterUser()
    {
        ShopRole = "Technician"
    };
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await UserDataService.Register(RegisterUser);

        if (result.Successful)
            NavigationManager.NavigateTo("/users");
    }

}