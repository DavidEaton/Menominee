# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  consoleNugetConfigPath: 'src/Console/nuget.config'

stages:
  - stage: Build
    displayName: Build & Test Solution
    jobs:
      - job: Build
        displayName: Build Solution Job
        steps:
        - task: NuGetToolInstaller@1
        - task: NuGetCommand@2
          inputs:
            command: 'restore'
            restoreSolution: '**/*.sln'
            feedsToUse: 'config'
            nugetConfigPath: 'nuget.config'
            externalFeedCredentials: 'Telerik Nuget'
        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        - task: PublishBuildArtifacts@1
#       - task: VSTest@2
#         inputs:
#           platform: '$(buildPlatform)'
#           configuration: '$(buildConfiguration)'
  - stage: 'DeployAPI'
    displayName: 'Deploy API Application'
    dependsOn: Build
    jobs:
      - deployment: DeployStockTracAPI
        displayName: Deploy StockTrac API
        environment: Staging
        variables:
        - group: StageDeploy
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: drop
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'MenomineeDev'
                  appType: 'webApp'
                  WebAppName: '$(WebAppNameApi)'
                  deployToSlotOrASE: true
                  slotName: '$(Slot)'
                  ResourceGroupName: '$(ResourceGroup)' 
                  packageForLinux: '$(Pipeline.Workspace)/drop/CustomerVehicleManagement.Api.zip'
  - stage: 'DeployIDP'
    displayName: 'Deploy IDP Application'
    dependsOn: Build
    jobs:
      - deployment: DeployJancoIDP
        displayName: Deploy Janco IDP
        environment: Staging
        variables:
        - group: StageDeploy
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: drop
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'MenomineeDev'
                  appType: 'webApp'
                  WebAppName: '$(WebAppNameIdp)'
                  deployToSlotOrASE: true
                  slotName: '$(Slot)'
                  ResourceGroupName: '$(ResourceGroup)' 
                  packageForLinux: '$(Pipeline.Workspace)/drop/Janco.Idp.zip'
  - stage: 'DeployClient'
    displayName: 'Deploy Client Application'
    dependsOn: Build
    jobs:
      - deployment: DeployStockTracClient
        displayName: Deploy StockTrac Client
        environment: Staging
        variables:
        - group: StageDeploy
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: drop
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'MenomineeDev'
                  appType: 'webApp'
                  WebAppName: '$(WebAppNameClient)'
                  deployToSlotOrASE: true
                  slotName: '$(Slot)'
                  ResourceGroupName: '$(ResourceGroup)' 
                  packageForLinux: '$(Pipeline.Workspace)/drop/Menominee.Client.zip'

