trigger:
- master
- MEN-1061-staging-slot-points-to-incorrect-api-url

pool:
  vmImage: 'windows-latest'

variables:
  - group: StageDeploy # defined in DevOps Library
  
  - name: azureSubscription
    value: 'MenomineeDev'

  - name: buildConfiguration
    value: 'Release'

  - name: dotnetSdkVersion
    value: '6.0.x'

  - name: entityFrameworkVersion
    value: '6.0.*'

  - name: resourceGroup
    value: 'menominee'

  - name: slot
    value: 'staging'

  - name: apiAppName
    value: 'menominee-api'

  - name: clientAppName
    value: 'menominee'

  - name: artifactNameClient
    value: 'MenomineeClient'

  - name: artifactNameApi
    value: 'MenomineeApi'

  - name: artifactPath
    value: 'deploy-packages'

stages:

  - stage: Build
    displayName: 'Build & Test Solution'
    jobs:
    - job: BuildAndTest
      displayName: 'Build and Test Application'
      steps:
        - checkout: self
        
        # Setup .NET SDK
        - task: UseDotNet@2
          displayName: 'Setup .NET SDK'
          inputs:
            version: $(dotnetSdkVersion)
            packageType: sdk
    
        # Restore Telerik and other NuGet packages for all projects
        - template: telerik-nuget-restore-tasks.yml

        # Build projects
        - template: build-task.yml
          parameters:
            buildConfiguration: '$(buildConfiguration)'

        # Run tests
        - template: tests-task.yml
          parameters:
            buildConfiguration: '$(buildConfiguration)'

        # Publish projects
        - template: publish-task.yml
          parameters:
            buildConfiguration: '$(buildConfiguration)'
            artifactNameClient: '$(artifactNameClient)'
            artifactNameApi: '$(artifactNameApi)'

    #     # # Create EF Migration Script
    #     # - template: database-migrations-task.yml
    #     #   parameters:
    #     #     apiConnectionString: '$(ApiConnectionString)'


    # Deploy API to Azure Web App
    - job: DeployAPI
      displayName: 'Deploy API'
      dependsOn: BuildAndTest
      condition: succeeded()
      steps:
        - download: current
          artifact: '$(artifactNameApi)'
        - task: AzureWebApp@1
          displayName: 'Deploy API to Azure Web App'
          inputs:
            azureSubscription: $(azureSubscription)
            appType: 'webApp'
            appName: $(apiAppName)
            deployToSlotOrASE: true
            slotName: '$(slot)'
            package: '$(Pipeline.Workspace)/$(artifactNameApi)/**/*.zip'

    # # Deploy Client to Azure Web App
    # - job: DeployClient
    #   displayName: 'Deploy Client Application'
    #   dependsOn: BuildAndTest
    #   condition: succeeded()
    #   steps:
    #     - download: current
    #       artifact: '$(artifactNameClient)'
    #     - task: AzureWebApp@1
    #       displayName: 'Deploy Client to Azure Web App'
    #       inputs:
    #         azureSubscription: $(azureSubscription)
    #         appType: 'webApp'
    #         appName: $(clientAppName)
    #         deployToSlotOrASE: true
    #         slotName: '$(slot)'
    #         package: '$(Pipeline.Workspace)/$(artifactNameClient)/**/*.zip'
                  
  #  # Deploy Database Migrations
  #  # https://stackoverflow.com/questions/59761685/ef-migrations-with-azure-pipeline-tasks
  # - stage: DeployApiDatabaseMigrations
  #   displayName: 'Deploy API Database Migrations'
  #   jobs:
  #     - job:
  #       steps:
  #         - download: current
  #           artifact: '$(artifactPath)'
  #         - task: SqlAzureDacpacDeployment@1
  #           displayName: Execute API EF Migrations
  #           inputs:
  #             azureSubscription: $(azureSubscription)
  #             ServerName: '$(SqlServerName)'
  #             DatabaseName: '$(ApiDatabaseName)'
  #             SqlUsername: '$(SqlUsername)'
  #             SqlPassword: '$(SqlPassword)'
  #             deployType: SqlTask
  #             SqlFile: '$(Pipeline.Workspace)/$(artifactPath)\api-migrations.sql'