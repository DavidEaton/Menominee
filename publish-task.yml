parameters:
  - name: buildConfiguration
    default: 'Release'

  - name: artifactNameApi
    default: 'MenomineeApi'

  - name: artifactNameClient
    default: 'MenomineeClient'

steps:
  # Compiles and packages API, preparing it for deployment or distribution
  # The DotNetCoreCLI@2 task does the heavy lifting of compiling and packaging the
  # application according to the .csproj or .sln configurations and dependencies.
  # It makes the app ready for deployment by creating a set of deployable files.
  - task: DotNetCoreCLI@2
    displayName: 'Compile and package API'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/Menominee.Api.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)/api'
      zipAfterPublish: true
    
  # Publishes the packaged API as an artifact
  # The PublishPipelineArtifact@1 task doesn't interact with application code
  # directly. Instead, it's focused on the DevOps process, ensuring that the
  # output of the build process (i.e., the files generated by dotnet publish)
  # is available as an artifact. This artifact can be used later in the pipeline,
  # such as for deployment to different environments or for archival purposes.
  - task: PublishPipelineArtifact@1
    displayName: 'Publish packaged API artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/api' 
      artifactName: '${{ parameters.artifactNameApi }}'

  # Compile and package Client Application
  - task: DotNetCoreCLI@2
    displayName: 'Compile and package Client Application'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/Menominee.Client.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)/client'
      zipAfterPublish: true

  # Publish Client Artifact
  - task: PublishPipelineArtifact@1
    displayName: 'Publish packaged Client artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/client' 
      artifactName: '${{ parameters.artifactNameClient }}'
